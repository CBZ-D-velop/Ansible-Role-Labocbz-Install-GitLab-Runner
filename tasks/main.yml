---
- name: "Create Runner Config volume"
  community.docker.docker_volume:
    name: "{{ install_gitlab_runner__config_volume }}"
    state: "present"

- name: "Install GitLab Runner"
  register: docker_created
  community.docker.docker_container:
    name: "{{ install_gitlab_runner__name }}"
    image: "{{ install_gitlab_runner__image }}"
    state: "started"
    recreate: false
    restart_policy: "always"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ install_gitlab_runner__config_volume }}:/etc/gitlab-runner"

- name: "Register runner {{ install_gitlab_runner__name }}"
  register: output
  changed_when: output.rc != 0
  when: ((docker_created.changed | default(false)) or ( install_gitlab_runner__force_register | default(false)))
  ansible.builtin.command: >
    docker exec -i {{ install_gitlab_runner__name }} gitlab-runner register \
    --non-interactive \
    --url '{{ install_gitlab_runner__url }}' \
    --token '{{ install_gitlab_runner__token }}' \
    --executor 'docker' \
    --docker-image '{{ install_gitlab_runner__docker_image }}' \
    --name '{{ install_gitlab_runner__name }}' \
    --docker-pull-policy always 
    --docker-privileged {{ install_gitlab_runner__docker_privileged | lower }}
    --config /etc/gitlab-runner/config.toml

- name: "Handle runner configuration"
  block:
    - name: Extract id from TOML config
      register: id_result
      changed_when: false
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cat /var/lib/docker/volumes/{{ install_gitlab_runner__config_volume }}/_data/config.toml | grep 'id =' | awk -F' ' '{print $3}'
        executable: /bin/bash

    - name: Extract token_obtained_at from TOML config
      register: token_obtained_at_result
      changed_when: false
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cat /var/lib/docker/volumes/{{ install_gitlab_runner__config_volume }}/_data/config.toml | grep 'token_obtained_at =' | awk -F' ' '{print $3}'
        executable: /bin/bash

    - name: Extract token_expires_at from TOML config
      register: token_expires_at_result
      changed_when: false
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cat /var/lib/docker/volumes/{{ install_gitlab_runner__config_volume }}/_data/config.toml | grep 'token_expires_at =' | awk -F' ' '{print $3}'
        executable: /bin/bash

    - name: Extract token from TOML config
      register: token_result
      changed_when: false
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          cat /var/lib/docker/volumes/{{ install_gitlab_runner__config_volume }}/_data/config.toml | grep 'token =' | awk -F' ' '{print $3}'
        executable: /bin/bash

    - name: "Import TOML configuration for the runner"
      notify: "Restart runner"
      ansible.builtin.template:
        src: "templates/config.toml.j2"
        dest: "/var/lib/docker/volumes/{{ install_gitlab_runner__config_volume }}/_data/config.toml"
        owner: "root"
        group: "root"
        mode: "0700"
